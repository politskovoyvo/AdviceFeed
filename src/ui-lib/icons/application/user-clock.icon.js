import { jsxs, jsx } from 'react/jsx-runtime';
import { forwardRef, useId } from 'react';

const UserClock = forwardRef((props, ref) => {
    const id = useId();
    return (jsxs("svg", { ref: ref, ...props, width: "27", height: "24", viewBox: "0 0 27 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M15 22.0001C9.48 22.0001 5 17.5301 5 12.0001C5 6.4801 9.48 2.0001 15 2.0001C20.53 2.0001 25 6.4801 25 12.0001C25 17.5301 20.53 22.0001 15 22.0001ZM18.19 15.7101C18.31 15.7801 18.44 15.8201 18.58 15.8201C18.83 15.8201 19.08 15.6901 19.22 15.4501C19.43 15.1001 19.32 14.6401 18.96 14.4201L15.4 12.3001V7.6801C15.4 7.2601 15.06 6.9301 14.65 6.9301C14.24 6.9301 13.9 7.2601 13.9 7.6801V12.7301C13.9 12.9901 14.04 13.2301 14.27 13.3701L18.19 15.7101Z", fill: "currentColor" }), jsxs("mask", { id: `path-2-outside-${id}`, maskUnits: "userSpaceOnUse", x: "-0.105469", y: "9.89486", width: "12", height: "14", fill: "black", children: [jsx("rect", { fill: "currentColor", x: "-0.105469", y: "9.89486", width: "12", height: "14" }), jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M8.54152 14.5404C8.54152 16.0089 7.36408 17.1864 5.89453 17.1864C4.42548 17.1864 3.24754 16.0089 3.24754 14.5404C3.24754 13.0719 4.42548 11.8949 5.89453 11.8949C7.36408 11.8949 8.54152 13.0719 8.54152 14.5404ZM5.89453 21.8949C3.72572 21.8949 1.89453 21.5424 1.89453 20.1823C1.89453 18.8218 3.73722 18.4818 5.89453 18.4818C8.06384 18.4818 9.89453 18.8343 9.89453 20.1943C9.89453 21.5549 8.05184 21.8949 5.89453 21.8949Z" })] }), jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M8.54152 14.5404C8.54152 16.0089 7.36408 17.1864 5.89453 17.1864C4.42548 17.1864 3.24754 16.0089 3.24754 14.5404C3.24754 13.0719 4.42548 11.8949 5.89453 11.8949C7.36408 11.8949 8.54152 13.0719 8.54152 14.5404ZM5.89453 21.8949C3.72572 21.8949 1.89453 21.5424 1.89453 20.1823C1.89453 18.8218 3.73722 18.4818 5.89453 18.4818C8.06384 18.4818 9.89453 18.8343 9.89453 20.1943C9.89453 21.5549 8.05184 21.8949 5.89453 21.8949Z", fill: "currentColor" }), jsx("path", { d: "M5.89453 18.6864C8.19218 18.6864 10.0415 16.8377 10.0415 14.5404H7.04152C7.04152 15.1801 6.53599 15.6864 5.89453 15.6864V18.6864ZM1.74754 14.5404C1.74754 16.8378 3.59757 18.6864 5.89453 18.6864V15.6864C5.25339 15.6864 4.74754 15.18 4.74754 14.5404H1.74754ZM5.89453 10.3949C3.59794 10.3949 1.74754 12.2426 1.74754 14.5404H4.74754C4.74754 13.9012 5.25302 13.3949 5.89453 13.3949V10.3949ZM10.0415 14.5404C10.0415 12.2427 8.19181 10.3949 5.89453 10.3949V13.3949C6.53636 13.3949 7.04152 13.901 7.04152 14.5404H10.0415ZM0.394531 20.1823C0.394531 20.8967 0.649056 21.5356 1.1087 22.0371C1.53737 22.5049 2.08036 22.7854 2.5805 22.9626C3.56078 23.3097 4.77366 23.3949 5.89453 23.3949V20.3949C4.84659 20.3949 4.05947 20.3038 3.58196 20.1347C3.35319 20.0536 3.30284 19.9911 3.32039 20.0102C3.33411 20.0252 3.35773 20.0571 3.37565 20.1032C3.38398 20.1247 3.38902 20.144 3.3918 20.1594C3.39455 20.1746 3.39453 20.1829 3.39453 20.1823H0.394531ZM5.89453 16.9818C4.7821 16.9818 3.57088 17.0635 2.59097 17.4058C2.09124 17.5803 1.54621 17.858 1.11502 18.3241C0.651882 18.8248 0.394531 19.465 0.394531 20.1823H3.39453C3.39453 20.1823 3.39451 20.1911 3.39162 20.207C3.38869 20.2232 3.38341 20.2432 3.37475 20.2654C3.35612 20.3129 3.3316 20.3458 3.3173 20.3612C3.29903 20.381 3.3495 20.3186 3.58011 20.238C4.06088 20.0701 4.84965 19.9818 5.89453 19.9818V16.9818ZM11.3945 20.1943C11.3945 19.4801 11.1401 18.8412 10.6805 18.3396C10.2519 17.8719 9.70893 17.5913 9.20879 17.4141C8.22853 17.067 7.01562 16.9818 5.89453 16.9818V19.9818C6.94276 19.9818 7.72984 20.0729 8.20726 20.242C8.43595 20.323 8.48624 20.3856 8.46865 20.3664C8.45491 20.3514 8.4313 20.3195 8.41339 20.2733C8.40507 20.2519 8.40003 20.2326 8.39725 20.2172C8.39451 20.202 8.39453 20.1938 8.39453 20.1943H11.3945ZM5.89453 23.3949C7.00696 23.3949 8.21819 23.3131 9.19809 22.9709C9.69782 22.7964 10.2429 22.5187 10.674 22.0526C11.1372 21.5519 11.3945 20.9117 11.3945 20.1943H8.39453C8.39453 20.1944 8.39455 20.1856 8.39744 20.1697C8.40037 20.1535 8.40565 20.1335 8.41432 20.1113C8.43294 20.0637 8.45746 20.0309 8.47176 20.0154C8.49003 19.9957 8.43956 20.0581 8.20895 20.1387C7.72819 20.3066 6.93941 20.3949 5.89453 20.3949V23.3949Z", fill: "transparent", mask: `url(#path-2-outside-${id})` })] }));
});
UserClock.displayName = 'UIUserClock';

export { UserClock };
